@{
    ViewData["Title"] = "Assignment Page";

    var jsonModel = System.Text.Json.JsonSerializer.Serialize(Model) ?? string.Empty;
    List<int> linesPerPage = [5, 10, 20, 30, 40, 50];
}
@model List<AssignmentViewModel>?

<div class="headerListWrapper">
    <div class="gridListContentContainer gridListContent9">
        <div>Auftrag ID</div>
        <div>Kunde</div>
        <div>Firma</div>
        <div>Gesellschafter</div>
        <div>Summe Auftrag</div>
        <div>Hat Zugabe</div>
        <div>Erstellt Am</div>
        <div>Letzte Statusänderung</div>
        <div>Status</div>
    </div>
</div>
<div class="gridContainer">
    @if (Model != null)
    {
        @foreach (var row in Model)
        {
            @await Html.PartialAsync("Partials/AssignmentListRow", row)
        }
    }
</div>
<div class="horizontal-group">
    @* Change this later! *@
    <a class="btn btn-small btn-secondary" asp-controller="Home" asp-action="Assignments" asp-route-page="1" asp-route-linesPerPage="20"><</a>
    <div class="value" style="width:20px">1</div>
    <a class="btn  btn-small btn-secondary" asp-controller="Home" asp-action="Assignments" asp-route-page="2" asp-route-linesPerPage="20">></a>
    <select data-row-id="linesPerPage" class="form-control" id="linesPerPage" style="width:50px">
        @foreach (var item in linesPerPage.OrderBy(x => x))
        {
            @if (item == 20)
            {
                @:<option value="@item" selected>@item</option>
            }
            else
            {
                @:<option value="@item">@item</option>
            }
        }
    </select>
    @* Change this later! *@
</div>